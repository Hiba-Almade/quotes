/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.Gson;
import org.junit.Test;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URL;
import java.util.Random;

import static org.junit.Assert.*;

public class AppTest {
    @Test public void readJsonFileTest() {
        Gson gson = new Gson();
        try (Reader reader = new FileReader("recentquotes.json"))
        {
            RecentQuotes[]quotes=gson.fromJson(reader,RecentQuotes[].class);
            Random number = new Random();
          assertEquals("{\n" +
                  "    \"tags\": [\n" +
                  "      \"attributed-no-source\"\n" +
                  "    ],\n" +
                  "    \"author\": \"Marilyn Monroe\",\n" +
                  "    \"likes\": \"18651 likes\",\n" +
                  "    \"text\": \" “I am good, but not an angel. I do sin, but I am not the devil. I am just a small girl in a big world trying to find someone to love.” \"\n" +
                  "  }",quotes[0]);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    @Test public void readFromApiTest() throws IOException {
        Gson gson = new Gson();
        URL url = new URL("https://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.95 Safari/537.11");

        if (connection.getResponseCode() == 200) {

            InputStream inputStream = connection.getInputStream();
            InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
            BufferedReader in = new BufferedReader(inputStreamReader);
            QuotesApi quotesApi = gson.fromJson(in, QuotesApi.class);
            assertNotNull(quotesApi);
            in.close();

        }
    }


    @Test public void readFromApiWriteTest() throws IOException {
        Gson gson = new Gson();
        URL url = new URL("https://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.95 Safari/537.11");

        if (connection.getResponseCode() == 200) {

            InputStream inputStream = connection.getInputStream();
            InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
            BufferedReader in = new BufferedReader(inputStreamReader);
            QuotesApi quotesApi = gson.fromJson(in, QuotesApi.class);
            in.close();

            BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter("ApiQuotes.json"));
            String newQuotes = gson.toJson(quotesApi);
            bufferedWriter.write(newQuotes);
            assertNotNull(newQuotes);
            bufferedWriter.close();


        }
    }
}
